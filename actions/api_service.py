#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
API Service Action
X·ª≠ l√Ω kh·ªüi ƒë·ªông d·ªãch v·ª• API
"""

import os
import subprocess
from .base_action import BaseAction


class APIServiceAction(BaseAction):
    """X·ª≠ l√Ω kh·ªüi ƒë·ªông d·ªãch v·ª• API"""
    
    def execute(self):
        """Kh·ªüi ƒë·ªông d·ªãch v·ª• API"""
        print("\nüîß KH·ªûI ƒê·ªòNG D·ªäCH V·ª§ API")
        print("-" * 30)
        
        # Hi·ªÉn th·ªã th√¥ng tin v·ªÅ API service
        print("üì° VideoForge API Service s·∫Ω ƒë∆∞·ª£c kh·ªüi ƒë·ªông...")
        print("üåê Service s·∫Ω ch·∫°y t·∫°i: http://localhost:8080")
        print("üìö API Documentation: http://localhost:8080/docs")
        print()
        print("üìã C√°c endpoint c√≥ s·∫µn:")
        print("  POST /api/process/start         - B·∫Øt ƒë·∫ßu x·ª≠ l√Ω video")
        print("  GET  /api/process/status/{id}   - Ki·ªÉm tra tr·∫°ng th√°i")
        print("  GET  /api/process/list          - Danh s√°ch c√¥ng vi·ªác")
        print("  POST /api/process/cancel/{id}   - H·ªßy c√¥ng vi·ªác")
        print("  GET  /api/files/list            - Danh s√°ch file")
        print("  POST /api/files/upload          - Upload file")
        print("  WebSocket /ws/progress          - C·∫≠p nh·∫≠t real-time")
        print()
        
        # X√°c nh·∫≠n kh·ªüi ƒë·ªông
        choice = input("üöÄ B·∫°n c√≥ mu·ªën kh·ªüi ƒë·ªông API service kh√¥ng? (y/n): ").lower()
        
        if choice != 'y':
            print("‚ùå ƒê√£ h·ªßy kh·ªüi ƒë·ªông API service.")
            input("Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c...")
            return
        
        try:
            # Ch·∫°y VideoForge serve command
            print("\nüîÑ ƒêang kh·ªüi ƒë·ªông API service...")
            print("üí° Tip: Nh·∫•n Ctrl+C ƒë·ªÉ d·ª´ng service")
            print("-" * 50)
            
            # Ki·ªÉm tra virtual environment
            venv_python = os.path.join("D:", "VideoForge", "videoforge-core", "venv", "Scripts", "python.exe")
            
            if os.path.exists(venv_python):
                cmd = [venv_python, "-m", "videoforge", "serve", "--port", "8080"]
            else:
                cmd = ["videoforge", "serve", "--port", "8080"]
            
            print(f"üöÄ Ch·∫°y l·ªánh: {' '.join(cmd)}")
            
            # Ch·∫°y service (blocking call)
            process = subprocess.run(cmd, text=True)
            
            if process.returncode == 0:
                print("‚úÖ API service ƒë√£ d·ª´ng th√†nh c√¥ng.")
            else:
                print(f"‚ùå API service d·ª´ng v·ªõi l·ªói. Return code: {process.returncode}")
                
        except KeyboardInterrupt:
            print("\n\n‚èπÔ∏è API service ƒë√£ ƒë∆∞·ª£c d·ª´ng b·ªüi user.")
        except Exception as e:
            print(f"‚ùå L·ªói khi kh·ªüi ƒë·ªông API service: {e}")
        
        input("\nNh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c...")
    
    def get_service_info(self):
        """L·∫•y th√¥ng tin v·ªÅ API service"""
        return {
            "name": "VideoForge API Service",
            "version": "1.0.0",
            "port": 8080,
            "host": "localhost",
            "endpoints": [
                {
                    "method": "POST",
                    "path": "/api/process/start",
                    "description": "B·∫Øt ƒë·∫ßu x·ª≠ l√Ω video"
                },
                {
                    "method": "GET",
                    "path": "/api/process/status/{id}",
                    "description": "Ki·ªÉm tra tr·∫°ng th√°i x·ª≠ l√Ω"
                },
                {
                    "method": "GET",
                    "path": "/api/process/list",
                    "description": "Danh s√°ch t·∫•t c·∫£ c√¥ng vi·ªác"
                },
                {
                    "method": "POST",
                    "path": "/api/process/cancel/{id}",
                    "description": "H·ªßy c√¥ng vi·ªác ƒëang x·ª≠ l√Ω"
                },
                {
                    "method": "GET",
                    "path": "/api/files/list",
                    "description": "Danh s√°ch file trong h·ªá th·ªëng"
                },
                {
                    "method": "POST",
                    "path": "/api/files/upload",
                    "description": "Upload file video"
                },
                {
                    "method": "WebSocket",
                    "path": "/ws/progress",
                    "description": "C·∫≠p nh·∫≠t ti·∫øn ƒë·ªô real-time"
                }
            ]
        }
